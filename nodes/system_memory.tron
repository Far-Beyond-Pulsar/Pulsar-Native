//! A node that returns system memory information.

/// Get system memory information (simplified).
fn @[pulsar_node_fn_id]@() -> Result<String, String> {
    use std::process::Command;
    
    let output = if cfg!(target_os = "windows") {
        Command::new("cmd")
            .args(["/C", "systeminfo | findstr \"Physical Memory\""])
            .output()
    } else if cfg!(target_os = "macos") {
        Command::new("vm_stat")
            .output()
    } else {
        Command::new("free")
            .args(["-h"])
            .output()
    };
    
    match output {
        Ok(output) => {
            if output.status.success() {
                Ok(String::from_utf8_lossy(&output.stdout).trim().to_string())
            } else {
                Err("Failed to get memory info".to_string())
            }
        },
        Err(e) => Err(format!("Failed to execute memory command: {}", e)),
    }
}