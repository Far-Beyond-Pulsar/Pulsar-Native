//! A node that applies ease-in-out interpolation.
//!
//! This node performs an ease-in-out interpolation, which starts slow, accelerates in the middle, and slows down at the end.
//! Useful for smooth transitions, animations, and UI effects.
//!
//! # Inputs
//! - `in_t_number`: The interpolation parameter (float, typically in [0, 1]).
//!
//! # Outputs
//! - The interpolated value (float) using an ease-in-out curve.
//!
//! # Example
//! If `in_t_number` is 0.0, the output will be 0.0. If `in_t_number` is 0.5, the output will be 0.5. If `in_t_number` is 1.0, the output will be 1.0.
//!
//! # Notes
//! The parameter t is clamped to [0, 1]. Values outside this range will be clamped.
//! Useful for creating natural motion and transitions in UI or animation.

/// Apply ease-in-out interpolation.
fn @[pulsar_node_fn_id]@() -> f32 {
    let t = @[in_t_number]@.clamp(0.0, 1.0);
    if t < 0.5 {
        2.0 * t * t
    } else {
        -1.0 + (4.0 - 2.0 * t) * t
    }
}