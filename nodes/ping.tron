//! A node that pings a host to check network connectivity.
//!
//! This node sends a single ping request to the specified host and returns the result as a string.
//! Useful for checking if a server or device is reachable, network diagnostics, or monitoring.
//!
//! # Inputs
//! - `in_host_string`: The hostname or IP address to ping (string).
//!
//! # Outputs
//! - `Result<String, String>`: The output of the ping command if successful, or an error message if it fails.
//!
//! # Example
//! If `in_host_string` is "google.com", the output will be the result of the ping command to google.com.
//!
//! # Notes
//! This implementation uses the system's `ping` command. On Windows, it uses `ping -n 1`; on Unix-like systems, it uses `ping -c 1`.
//! The output format may vary by platform. Ensure the `ping` command is available on the system.
//!
//! # Errors
//! Returns an error if the ping command fails or the host is unreachable.

/// Ping a host to check connectivity.
fn @[pulsar_node_fn_id]@() -> Result<String, String> {
    use std::process::Command;
    
    let output = if cfg!(target_os = "windows") {
        Command::new("ping")
            .args(["-n", "1", @[in_host_string]@])
            .output()
    } else {
        Command::new("ping")
            .args(["-c", "1", @[in_host_string]@])
            .output()
    };
    
    match output {
        Ok(output) => {
            if output.status.success() {
                Ok(String::from_utf8_lossy(&output.stdout).to_string())
            } else {
                Err(String::from_utf8_lossy(&output.stderr).to_string())
            }
        },
        Err(e) => Err(format!("Failed to execute ping: {}", e)),
    }
}