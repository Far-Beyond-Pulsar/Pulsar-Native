//! A node that calculates the magnitude (length) of a 3D vector.
//!
//! This node computes the Euclidean length (magnitude) of a 3D vector using the formula
//! `sqrt(x^2 + y^2 + z^2)`.
//!
//! # Inputs
//! - `in_vector_vector3`: The input vector as a tuple (x, y, z).
//!
//! # Outputs
//! - `f32`: The magnitude (length) of the vector.
//!
//! # Example
//! If `in_vector_vector3` is (3.0, 4.0, 12.0), the output will be 13.0.
//!
//! # Notes
//! The output is always non-negative. If the input vector is (0.0, 0.0, 0.0), the output is 0.0.
//!
//! This node computes the Euclidean length (magnitude) of a 3D vector using the formula
//! `sqrt(x^2 + y^2 + z^2)`.
//!
//! # Inputs
//! - `in_vector_vector3`: The input vector as a tuple (x, y, z).
//!
//! # Outputs
//! - `f32`: The magnitude (length) of the vector.
//!
//! # Example
//! If `in_vector_vector3` is (3.0, 4.0, 12.0), the output will be 13.0.
//!
//! # Notes
//! The output is always non-negative. If the input vector is (0.0, 0.0, 0.0), the output is 0.0.
//!
//! This node computes the Euclidean length (magnitude) of a 3D vector using the formula
//! `sqrt(x^2 + y^2 + z^2)`.
//!
//! # Inputs
//! - `in_vector_vector3`: The input vector as a tuple (x, y, z).
//!
//! # Outputs
//! - `f32`: The magnitude (length) of the vector.
//!
//! # Example
//! If `in_vector_vector3` is (3.0, 4.0, 12.0), the output will be 13.0.
//!
//! # Notes
//! The output is always non-negative. If the input vector is (0.0, 0.0, 0.0), the output is 0.0.

/// Calculate the magnitude of a 3D vector.
fn @[pulsar_node_fn_id]@() -> f32 {
    let (x, y, z) = @[in_vector_vector3]@;
    (x * x + y * y + z * z).sqrt()
}