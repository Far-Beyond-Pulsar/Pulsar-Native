//! A node that extracts a slice from a vector.
//!
//! This node returns a subvector containing elements from the specified start index (inclusive)
//! to the end index (exclusive). If the indices are invalid or out of bounds, an empty vector is returned.
//!
//! # Inputs
//! - `in_array_vector`: The input vector.
//! - `in_start_number`: The start index (inclusive).
//! - `in_end_number`: The end index (exclusive).
//!
//! # Outputs
//! - The sliced vector, or empty if indices are invalid.
//!
//! # Example
//! If `in_array_vector` is [1, 2, 3, 4, 5], `in_start_number` is 1, and `in_end_number` is 4,
//! the output will be [2, 3, 4].
//!
//! # Notes
//! Indices must satisfy 0 <= start <= end <= array length.

/// Extract a slice from a vector.
fn @[pulsar_node_fn_id]@() -> Vec<@[in_item_type]@> {
    let array = @[in_array_vector]@;
    let start = @[in_start_number]@ as usize;
    let end = @[in_end_number]@ as usize;
    if start < array.len() && end <= array.len() && start <= end {
        array[start..end].to_vec()
    } else {
        Vec::new()
    }
}