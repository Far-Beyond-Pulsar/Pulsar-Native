//! A node that extracts a substring from a string.
//!
//! This node extracts a substring from the input string, starting at the specified start index (inclusive)
//! and ending at the specified end index (exclusive). If the indices are out of bounds or invalid,
//! an empty string is returned.
//!
//! # Inputs
//! - `in_text_string`: The source string.
//! - `in_start_number`: The start index (inclusive, integer).
//! - `in_end_number`: The end index (exclusive, integer).
//!
//! # Outputs
//! - The substring from start to end, or an empty string if indices are invalid.
//!
//! # Example
//! If `in_text_string` is "abcdef", `in_start_number` is 1, and `in_end_number` is 4, the output will be "bcd".
//!
//! # Notes
//! If start >= end, or indices are out of bounds, the result is an empty string.

/// Extract a substring from a string.
fn @[pulsar_node_fn_id]@() -> String {
    let text = @[in_text_string]@;
    let start = @[in_start_number]@ as usize;
    let end = @[in_end_number]@ as usize;
    if start < text.len() && end <= text.len() && start <= end {
        text[start..end].to_string()
    } else {
        String::new()
    }
}