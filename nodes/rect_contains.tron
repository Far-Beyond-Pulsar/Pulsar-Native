//! A node that checks if a rectangle contains a point.
//!
//! This node determines whether a given point (x, y) lies within the bounds of a rectangle defined by its position and size.
//! Useful for hit-testing, collision detection, UI logic, and spatial queries.
//!
//! # Inputs
//! - `in_rect_rectangle`: The rectangle, represented as ((x, y), (width, height)).
//! - `in_point_vector2`: The point to check, represented as (x, y).
//!
//! # Outputs
//! - Returns `true` if the point is inside or on the edge of the rectangle, `false` otherwise.
//!
//! # Example
//! If `in_rect_rectangle` is ((0.0, 0.0), (10.0, 5.0)) and `in_point_vector2` is (3.0, 4.0), the output will be true.
//! If the point is (11.0, 2.0), the output will be false.
//!
//! # Notes
//! The check is inclusive: points on the edge of the rectangle are considered inside.
//! Use this node for geometric queries, UI hit-testing, or spatial logic.
//
 /// Check if a rectangle contains a point.
fn @[pulsar_node_fn_id]@() -> bool {
    let ((rect_x, rect_y), (width, height)) = @[in_rect_rectangle]@;
    let (point_x, point_y) = @[in_point_vector2]@;
    point_x >= rect_x && point_x <= rect_x + width &&
    point_y >= rect_y && point_y <= rect_y + height
}