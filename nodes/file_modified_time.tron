//! A node that returns the last modified time of a file.
//!
//! This node retrieves the last modification timestamp of the specified file and returns it as a Unix timestamp (seconds since epoch).
//! Useful for checking when a file was last updated, implementing cache invalidation, or tracking file changes.
//!
//! # Inputs
//! - `in_path_string`: The path to the file whose modification time is to be retrieved.
//!
//! # Outputs
//! - `Result<u64, String>`: The last modified time as a Unix timestamp (seconds since epoch), or an error message if retrieval fails.
//!
//! # Example
//! If the file was last modified on January 2, 1970, the output will be 86400 (number of seconds in one day).
//!
//! # Notes
//! Returns an error if the file does not exist or its metadata cannot be accessed. The timestamp is in UTC.
//!
//! # Behavior
//! Uses the standard library to access file metadata and extract the modification time.
//
/// Get the last modified time of a file as Unix timestamp.
fn @[pulsar_node_fn_id]@() -> Result<u64, String> {
    match std::fs::metadata(@[in_path_string]@) {
        Ok(metadata) => {
            match metadata.modified() {
                Ok(time) => {
                    match time.duration_since(std::time::UNIX_EPOCH) {
                        Ok(duration) => Ok(duration.as_secs()),
                        Err(e) => Err(format!("Time error: {}", e)),
                    }
                },
                Err(e) => Err(format!("Failed to get modified time: {}", e)),
            }
        },
        Err(e) => Err(format!("Failed to get file metadata: {}", e)),
    }
}