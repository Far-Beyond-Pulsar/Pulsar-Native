//! A node that applies cubic ease-out interpolation.
//!
//! This node computes the cubic ease-out interpolation for the given parameter t.
//! The output starts quickly and slows down toward the end, producing a smooth deceleration.
//!
//! # Inputs
//! - `in_t_number`: The interpolation parameter t (float, typically in [0, 1]).
//!
//! # Outputs
//! - The interpolated value (float) using cubic ease-out.
//!
//! # Example
//! If `in_t_number` is 0.5, the output will be approximately 0.875.
//!
//! # Notes
//! The parameter t is clamped to [0, 1]. Useful for animations, transitions, and smoothing values.
//
/// Apply cubic ease-out interpolation (very slow end).
fn @[pulsar_node_fn_id]@() -> f32 {
    let t = @[in_t_number]@.clamp(0.0, 1.0);
    let f = t - 1.0;
    1.0 + f * f * f
}