//! A node that lists the contents of a directory.
//!
//! This node retrieves the names of all files and subdirectories within the specified directory path.
//! Useful for file management, diagnostics, or displaying directory contents in a UI.
//!
//! # Inputs
//! - `in_path_string`: The path to the directory to list.
//!
//! # Outputs
//! - `Result<Vec<String>, String>`: A vector of file and directory names, or an error message if the directory cannot be read.
//!
//! # Example
//! If `in_path_string` is "C:/Users", the output will be a list of all files and folders in that directory.
//!
//! # Notes
//! The output contains only the names (not full paths) of the entries in the directory.
//! If the directory does not exist or cannot be read, an error message is returned.
//!
//! # Behavior
//! Uses the standard library to read the directory contents and returns the result as a vector of strings.
//
fn @[pulsar_node_fn_id]@() -> Result<Vec<String>, String> {
    match std::fs::read_dir(@[in_path_string]@) {
        Ok(entries) => {
            let mut files = Vec::new();
            for entry in entries {
                if let Ok(entry) = entry {
                    if let Some(name) = entry.file_name().to_str() {
                        files.push(name.to_string());
                    }
                }
            }
            Ok(files)
        },
        Err(e) => Err(format!("Failed to read directory: {}", e)),
    }
}