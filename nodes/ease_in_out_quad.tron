//! A pure function that applies quadratic ease-in-out interpolation.

/// Apply quadratic ease-in-out interpolation (slow start and end).
fn @[pulsar_node_fn_id]@() -> f32 {
    let t = @[in_t_number]@.clamp(0.0, 1.0);
    if t < 0.5 {
        2.0 * t * t
    } else {
        1.0 - 2.0 * (1.0 - t) * (1.0 - t)
    }
}