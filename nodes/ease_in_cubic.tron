//! A node that applies cubic ease-in interpolation.
//!
//! This node computes a cubic ease-in curve, which starts very slowly and accelerates towards the end.
//! The output is calculated as t^3, where t is clamped to the range [0, 1].
//!
//! # Inputs
//! - `in_t_number`: The interpolation parameter (float, typically in [0, 1]).
//!
//! # Outputs
//! - The eased value (float), ranging from 0.0 to 1.0.
//!
//! # Example
//! If `in_t_number` is 0.5, the output will be 0.125.
//!
//! # Notes
//! Useful for animations and transitions that should start slowly and speed up towards the end.
//
/// Apply cubic ease-in interpolation (very slow start).
fn @[pulsar_node_fn_id]@() -> f32 {
    let t = @[in_t_number]@.clamp(0.0, 1.0);
    t * t * t
}