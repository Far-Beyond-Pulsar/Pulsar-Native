//! A node that finds the nearest value in an array to a target number.
//!
//! This node takes a target number and an array of numbers, and returns the value in the array that is closest to the target.
//! Useful for quantization, snapping, searching, or finding the best match in a dataset.
//!
//! # Inputs
//! - `in_target_number`: The target number to compare against.
//! - `in_array_vector`: The array of numbers to search.
//!
//! # Outputs
//! - `Option<f32>`: The value in the array closest to the target, or None if the array is empty.
//!
//! # Example
//! If `in_target_number` is 5.2 and `in_array_vector` is [1.0, 4.9, 8.0], the output will be Some(4.9).
//! If the array is empty, the output will be None.
//!
//! # Notes
//! If multiple values are equally close, the first one found is returned.

/// Find the nearest value in an array to a target number.
fn @[pulsar_node_fn_id]@() -> Option<f32> {
    let target = @[in_target_number]@;
    let array: Vec<f32> = @[in_array_vector]@;
    
    if array.is_empty() {
        return None;
    }
    
    array.iter()
        .min_by(|a, b| {
            let dist_a = (target - **a).abs();
            let dist_b = (target - **b).abs();
            dist_a.partial_cmp(&dist_b).unwrap_or(std::cmp::Ordering::Equal)
        })
        .copied()
}