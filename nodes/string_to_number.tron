//! A node that safely converts a string to a number.
//!
//! This node attempts to parse the input string as a floating-point number (`f32`).
//! If parsing succeeds, it returns the number. If parsing fails, it returns an error message
//! describing the failure.
//!
//! # Inputs
//! - `in_text_string`: The string to convert to a number.
//!
//! # Outputs
//! - `Result<f32, String>`: The parsed number, or an error message if parsing fails.
//!
//! # Example
//! If `in_text_string` is "3.14", the output will be `Ok(3.14)`.
//! If `in_text_string` is "abc", the output will be `Err("Cannot convert 'abc' to number")`.
//!
//! # Notes
//! Leading and trailing whitespace is ignored. Only base-10 floating-point numbers are supported.

/// Safely convert a string to a number with error handling.
fn @[pulsar_node_fn_id]@() -> Result<f32, String> {
    match @[in_text_string]@.trim().parse::<f32>() {
        Ok(num) => Ok(num),
        Err(_) => Err(format!("Cannot convert '{}' to number", @[in_text_string]@)),
    }
}