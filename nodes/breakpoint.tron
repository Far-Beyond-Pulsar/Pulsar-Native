//! A node that simulates a breakpoint for debugging by printing a message and pausing execution.
//!
//! This node prints the provided message to the console and waits for user input before continuing.
//! It is useful for pausing execution at a specific point to inspect state or debug logic.
//!
//! # Inputs
//! - `in_message_string`: The message to display when the breakpoint is hit.
//!
//! # Behavior
//! Execution is paused until the user presses Enter. The message is printed to help identify the breakpoint.
//!
//! # Example
//! If `in_message_string` is "Reached checkpoint", the console will display:
//! BREAKPOINT: Reached checkpoint
//! Press Enter to continue...
//!
//! # Notes
//! Use this node to halt execution and inspect program state interactively during development.
//
/// Simulate a breakpoint for debugging (prints message and waits for input).
fn @[pulsar_node_fn_id]@() {
    println!("BREAKPOINT: {}", @[in_message_string]@);
    println!("Press Enter to continue...");
    let mut input = String::new();
    std::io::stdin().read_line(&mut input).unwrap();
}