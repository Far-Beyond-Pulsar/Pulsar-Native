//! A node that writes lines to a file.
//!
//! This node takes a vector of strings and writes each string as a separate line to the specified file path.
//! If the file exists, its contents will be replaced. If it does not exist, it will be created.
//!
//! # Inputs
//! - `in_path_string`: The path to the file to write to.
//! - `in_lines_vector`: A vector of strings, each representing a line to write.
//!
//! # Outputs
//! - `Result<(), String>`: Ok(()) if the file was written successfully, or an error message if writing failed.
//!
//! # Example
//! If `in_path_string` is "output.txt" and `in_lines_vector` is ["foo", "bar"], the file "output.txt" will contain:
//! foo
//! bar
//!
//! # Notes
//! This operation overwrites the file. Use with caution if you need to preserve existing content.
//! For appending, use the file_append node.
//!
//! # Behavior
//! The lines are joined with newline characters and written as the file's content.

/// Write lines to a file.
fn @[pulsar_node_fn_id]@() -> Result<(), String> {
    let lines: Vec<String> = @[in_lines_vector]@;
    let content = lines.join("\n");
    match std::fs::write(@[in_path_string]@, content) {
        Ok(()) => Ok(()),
        Err(e) => Err(format!("Failed to write file: {}", e)),
    }
}