//! A node that generates simple 1D noise using sine waves.
//!
//! This node produces a pseudo-random value in the range [0, 1] based on the input x and scale parameters.
//! Useful for procedural generation, animation, or adding randomness to values in a repeatable way.
//!
//! # Inputs
//! - `in_x_number`: The input value (float), typically representing position or time.
//! - `in_scale_number`: The scale factor for the noise (float).
//!
//! # Outputs
//! - A float value in the range [0, 1] representing the generated noise.
//!
//! # Example
//! If `in_x_number` is 1.0 and `in_scale_number` is 2.0, the output will be (1.0 * 2.0).sin() * 0.5 + 0.5.
//!
//! # Notes
//! This implementation uses a sine wave for simplicity and is not true Perlin or Simplex noise.
//! For more complex noise, use a dedicated noise library.

/// Generate simple 1D noise using sine waves.
fn @[pulsar_node_fn_id]@() -> f32 {
    let x = @[in_x_number]@;
    let scale = @[in_scale_number]@;
    (x * scale).sin() * 0.5 + 0.5
}