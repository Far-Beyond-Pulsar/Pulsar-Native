//! A node that prints a simple stack trace for debugging.
//!
//! This node outputs basic stack trace information to the console, including the current function name,
//! thread ID, and timestamp. Useful for diagnosing execution flow and debugging concurrent or complex logic.
//!
//! # Inputs
//! - `in_function_name_string`: The name of the current function or code block.
//!
//! # Outputs
//! - None. Prints stack trace information to the console.
//!
//! # Example
//! If `in_function_name_string` is "update", the output will include:
//! [STACK_TRACE] Current function: update
//! [STACK_TRACE] Thread: ThreadId(x)
//! [STACK_TRACE] Time: <timestamp>
//!
//! # Notes
//! Use this node to trace execution and identify where code is running, especially in multi-threaded contexts.
//
/// Print a simple stack trace for debugging.
fn @[pulsar_node_fn_id]@() {
    println!("[STACK_TRACE] Current function: {}", @[in_function_name_string]@);
    println!("[STACK_TRACE] Thread: {:?}", std::thread::current().id());
    println!("[STACK_TRACE] Time: {:?}", std::time::SystemTime::now());
}