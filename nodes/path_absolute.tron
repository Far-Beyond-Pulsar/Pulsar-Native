//! A node that converts a relative path to an absolute path.
//!
//! This node takes a file or directory path (which may be relative) and returns its absolute path as a string.
//! Useful for resolving file locations, normalizing paths, or preparing paths for file operations.
//!
//! # Inputs
//! - `in_path_string`: The input path to convert (string).
//!
//! # Outputs
//! - `Result<String, String>`: The absolute path as a string if successful, or an error message if the path cannot be resolved.
//!
//! # Example
//! If `in_path_string` is "./data/file.txt" and the current directory is "/home/user/project", the output will be "/home/user/project/data/file.txt".
//!
//! # Notes
//! The output is platform-dependent and uses the system's canonicalization logic. If the path does not exist, an error is returned.
//! Use this node to ensure paths are absolute before performing file operations.
//!
//! # Errors
//! Returns an error if the path does not exist or cannot be resolved.
//
/// Convert a relative path to an absolute path.
fn @[pulsar_node_fn_id]@() -> Result<String, String> {
    match std::fs::canonicalize(@[in_path_string]@) {
        Ok(path) => Ok(path.to_string_lossy().to_string()),
        Err(e) => Err(format!("Failed to get absolute path: {}", e)),
    }
}