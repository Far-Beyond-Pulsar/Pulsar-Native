//! A node that creates a new channel for communication between threads.
//!
//! This node constructs a new message-passing channel, returning both a sender and receiver.
//! Channels are used for thread-safe communication between concurrent tasks.
//!
//! # Outputs
//! - `(Sender<String>, Receiver<String>)`: A tuple containing the sender and receiver ends of the channel.
//!
//! # Example
//! Use the sender to send messages from one thread, and the receiver to receive them in another thread.
//!
//! # Notes
//! Channels are commonly used for passing data or signals between threads. The sender can be cloned to allow multiple producers.
//!
//! # Behavior
//! The channel is unbounded and will buffer messages until they are received.
//
/// Create a new channel for communication between threads.
fn @[pulsar_node_fn_id]@() -> (std::sync::mpsc::Sender<String>, std::sync::mpsc::Receiver<String>) {
    std::sync::mpsc::channel()
}